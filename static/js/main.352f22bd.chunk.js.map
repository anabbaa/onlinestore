{"version":3,"sources":["context/index.js","components/ProductItems.js","components/ProductList.js","components/Lookup.js","App.js","index.js"],"names":["Store","data","cart","filteredData","lookFor","text","filter","item","productName","includes","print","console","log","bill","this","reduce","acc","cur","price","StoreContext","React","createContext","ProductItems","info","contextObj","id","icon","title","inventory","src","alt","height","width","className","disabled","onClick","setStore","prevState","ProductList","useContext","useState","totalBill","setTotalBill","store","arr","setArr","useEffect","length","items","map","i","Fragment","LookUp","userInput","setUserInput","onSubmit","e","preventDefault","userText","toLocaleLowerCase","trim","type","placeholder","onChange","target","value","App","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAGMA,EAAQ,CACZC,K,KACAC,KAAM,GACNC,aAAc,GACdC,QAAS,SAACC,GACR,OAAOL,EAAMC,KAAKK,QAAO,SAACC,GAAD,OAAUA,EAAKC,YAAYC,SAASJ,OAE/DK,MAAO,kBAAMC,QAAQC,IAAIZ,IACzBa,KAAM,WACJ,OAAOC,KAAKZ,KAAKa,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,EAAIC,QAAO,KAIrDC,EAAeC,IAAMC,cAAcrB,G,qBCOxBsB,EArBI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACpBC,EAAmDF,EAAnDE,GAAIjB,EAA+Ce,EAA/Cf,YAAakB,EAAkCH,EAAlCG,KAAKC,EAA6BJ,EAA7BI,MAAQT,EAAqBK,EAArBL,MAAOU,EAAcL,EAAdK,UAE7C,OACE,+BACE,+BAAKpB,EAAL,OAAuB,qBAAKqB,IAAKH,EAAMI,IAAKH,EAAOI,OAAO,QAAQC,MAAM,UACxE,+BAAKd,EAAL,YACA,+BAAKU,EAAL,qBACA,wBAAQK,UAAU,UAChBC,SAAwB,IAAdN,EACVO,QAAS,WACPX,EAAWY,UAAS,SAACC,GACnB,OAAO,2BAAKA,GAAZ,IAAuBnC,KAAK,GAAD,mBAAMmC,EAAUnC,MAAhB,CAAsBqB,UAJvD,SAQGK,EAAY,EAAI,cAAgB,eAZ5BH,IC4BEa,EA9BK,WAClB,IAAMd,EAAae,qBAAWpB,GAC9B,EAAkCqB,mBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsBF,mBAAShB,EAAWmB,MAAM1C,MAAhD,mBAAO2C,EAAP,KAAYC,EAAZ,KACAlC,QAAQC,IAAIY,EAAWmB,MAAM1C,MAC7B6C,qBAAU,WACRD,EACErB,EAAWmB,MAAMxC,aAAa4C,OAC1BvB,EAAWmB,MAAMxC,aACjBqB,EAAWmB,MAAM1C,QAEtB,CAACuB,EAAWmB,MAAMxC,aAAcqB,EAAWmB,MAAM1C,OACpDU,QAAQC,IAAIY,EAAWmB,OACvB,IAAMK,EAAQJ,EAAIK,KAAI,SAAC1C,EAAM2C,GAAP,OACpB,cAAC,EAAD,CAAsB3B,KAAMhB,EAAMiB,WAAYA,GAA3B0B,MAGrB,OACE,eAAC,IAAMC,SAAP,WACE,gCACE,wBAAQlB,UAAU,OAAOE,QAAS,kBAAMO,EAAalB,EAAWmB,MAAM9B,SAAtE,wBAGA,qBAAIoB,UAAU,QAAd,UAAuBQ,EAAvB,eAEF,6BACCO,QCLQI,EAtBA,WACb,MAAkCZ,mBAAS,IAA3C,mBAAOa,EAAP,KAAkBC,EAAlB,KACM9B,EAAae,qBAAWpB,GAa9B,OACE,uBAAMoC,SATa,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAWL,EAAUM,oBAAoBC,OAC/CpC,EAAWY,UAAS,SAACC,GACnB,OAAO,2BAAKA,GAAZ,IAAuBlC,aAAcqB,EAAWmB,MAAMvC,QAAQsD,SAKhE,UACE,uBAAOzB,UAAU,SAAS4B,KAAK,OAAMC,YAAY,SAASC,SAdzC,SAACP,GACpBF,EAAaE,EAAEQ,OAAOC,QAa8DA,MAAOZ,IACzF,uBAAOpB,UAAU,SAAS4B,KAAK,SAASI,MAAM,eCGrCC,MAlBf,WACEvD,QAAQC,IAAIO,GAMZ,MAA0BqB,mBAASxC,GAAnC,mBAAO2C,EAAP,KAAcP,EAAd,KACA,OACE,eAACjB,EAAagD,SAAd,CAAuBF,MAAO,CAAEtB,QAAOP,YAAvC,UACE,8CACA,cAAC,EAAD,IAEA,cAAC,EAAD,QCZNgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.352f22bd.chunk.js","sourcesContent":["import React from \"react\";\nimport Data from \"../data.json\";\n\nconst Store = {\n  data: Data,\n  cart: [],\n  filteredData: [],\n  lookFor: (text) => {\n    return Store.data.filter((item) => item.productName.includes(text));\n  },\n  print: () => console.log(Store),\n  bill: function () {\n    return this.cart.reduce((acc, cur) => acc + cur.price, 0);\n  },\n};\n\nconst StoreContext = React.createContext(Store);\n\n\nexport { Store, StoreContext };\n","import React from \"react\";\n\nconst ProductItems = ({ info, contextObj }) => {\n  const { id, productName, icon,title,  price, inventory } = info;\n\n  return (\n    <li key={id}>\n      <h4>{productName} </h4><img src={icon} alt={title} height=\"200px\" width=\"200px\"/>\n      <h5>{price}€</h5>\n      <h6>{inventory} items in stock</h6>\n      <button className=\"addcart\"\n        disabled={inventory === 0}\n        onClick={() => {\n          contextObj.setStore((prevState) => {\n            return { ...prevState, cart: [...prevState.cart, info] };\n          });\n        }}\n      >\n        {inventory > 0 ? \"Add to cart\" : \"Sold out\"}\n      </button>\n    </li>\n  );\n      }\n  export default ProductItems;","import React, { useState, useContext, useEffect } from \"react\";\nimport ProductItems from \"./ProductItems\";\nimport { StoreContext } from \"../context\";\n\nconst ProductList = () => {\n  const contextObj = useContext(StoreContext);\n  const [totalBill, setTotalBill] = useState(0);\n  const [arr, setArr] = useState(contextObj.store.data);\n  console.log(contextObj.store.data);\n  useEffect(() => {\n    setArr(\n      contextObj.store.filteredData.length\n        ? contextObj.store.filteredData //filtered to will be data accrding to userinput\n        : contextObj.store.data\n    );\n  }, [contextObj.store.filteredData, contextObj.store.data]);\n  console.log(contextObj.store);\n  const items = arr.map((item, i) => (\n    <ProductItems key={i} info={item} contextObj={contextObj} />\n  ));\n\n  return (\n    <React.Fragment>\n      <div>\n        <button className=\"bill\" onClick={() => setTotalBill(contextObj.store.bill())}>\n          Total bill\n        </button>\n        <h6 className=\"total\">{totalBill}€</h6>\n      </div>\n      <ul>\n      {items}</ul>\n    </React.Fragment>\n  );\n};\nexport default ProductList;","import React, { useState, useContext } from \"react\";\nimport { StoreContext } from \"../context\";\n\nconst LookUp = () => {\n  const [userInput, setUserInput] = useState(\"\");\n  const contextObj = useContext(StoreContext);\n  const changeHandle = (e) => {\n    setUserInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const userText = userInput.toLocaleLowerCase().trim();\n    contextObj.setStore((prevState) => {\n      return { ...prevState, filteredData: contextObj.store.lookFor(userText) };\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input className=\"search\" type=\"text\"placeholder=\"search\" onChange={changeHandle} value={userInput} />\n      <input className=\"filter\" type=\"submit\" value=\"filter\" />\n    </form>\n  );\n};\nexport default LookUp;","import { useState } from \"react\";\nimport { Store, StoreContext } from \"./context\";\n\nimport ProductList from \"./components/ProductList\";\nimport LookUp from \"./components/Lookup\";\n//import Cart from \"./components/Cart\";\nfunction App() {\n  console.log(StoreContext);\n  // Method number one: you add more keys to the passed object, here I added a state\n  //const [filteredData, setFilteredData] = useState([]);\n  //  <StoreContext.Provider value={{ Store, filteredData, setFilteredData }}>\n\n  // Method number two: you add your Store to a state, so you get the Benefit of the functionality to update your state in this case Store\n  const [store, setStore] = useState(Store);\n  return (\n    <StoreContext.Provider value={{ store, setStore }}>\n      <h1>Online Store</h1>\n      <LookUp />\n\n      <ProductList />\n    </StoreContext.Provider>\n  );\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./sass/main.scss\";\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}